var timerdaemon = require("../index");
var chai = require("chai");
var expect = chai.expect;
var valpre = 0;
var valpost = 0;
timerdaemon.pre(1000, function () {
    valpre = valpre + 1;
});
timerdaemon.post(1000, function () {
    valpost = valpost + 1;
});
describe("timerdaemon", function () {
    this.timeout(50000);
    describe("pre", function () {
        it("after 5 seconds pre function was executed 6 times", function (done) {
            setTimeout(function () {
                expect(valpre).to.be.deep.equal(6);
                done();
            }, 5100);
        });
    });
    describe("post", function () {
        it("after 10 seconds post function was executed 10 times", function (done) {
            setTimeout(function () {
                expect(valpost).to.be.deep.equal(10);
                done();
            }, 5000);
        });
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvbWFpbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxJQUFZLFdBQVcsV0FBTSxVQUFVLENBQUMsQ0FBQTtBQUN4QyxJQUFZLElBQUksV0FBTSxNQUFNLENBQUMsQ0FBQTtBQUU3QixJQUFJLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO0FBRXpCLElBQUksTUFBTSxHQUFHLENBQUMsQ0FBQTtBQUNkLElBQUksT0FBTyxHQUFHLENBQUMsQ0FBQTtBQUdmLFdBQVcsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFO0lBQ2xCLE1BQU0sR0FBRyxNQUFNLEdBQUcsQ0FBQyxDQUFBO0FBQ3ZCLENBQUMsQ0FBQyxDQUFDO0FBQ0gsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUU7SUFDbkIsT0FBTyxHQUFHLE9BQU8sR0FBRyxDQUFDLENBQUE7QUFDekIsQ0FBQyxDQUFDLENBQUM7QUFHSCxRQUFRLENBQUMsYUFBYSxFQUFFO0lBQ3BCLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFcEIsUUFBUSxDQUFDLEtBQUssRUFBRTtRQUNaLEVBQUUsQ0FBQyxtREFBbUQsRUFBRSxVQUFTLElBQUk7WUFDakUsVUFBVSxDQUFDO2dCQUNQLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ25DLElBQUksRUFBRSxDQUFBO1lBQ1YsQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFBO1FBQ1osQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDLENBQUMsQ0FBQztJQUVILFFBQVEsQ0FBQyxNQUFNLEVBQUU7UUFDYixFQUFFLENBQUMsc0RBQXNELEVBQUUsVUFBUyxJQUFJO1lBQ3BFLFVBQVUsQ0FBQztnQkFDUCxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO2dCQUNyQyxJQUFJLEVBQUUsQ0FBQTtZQUNWLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQTtRQUNaLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQyxDQUFDLENBQUM7QUFFUCxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L21haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyB0aW1lcmRhZW1vbiBmcm9tIFwiLi4vaW5kZXhcIjtcbmltcG9ydCAqIGFzIGNoYWkgZnJvbSBcImNoYWlcIjtcblxubGV0IGV4cGVjdCA9IGNoYWkuZXhwZWN0O1xuXG5sZXQgdmFscHJlID0gMFxubGV0IHZhbHBvc3QgPSAwXG5cblxudGltZXJkYWVtb24ucHJlKDEwMDAsIGZ1bmN0aW9uKCkge1xuICAgIHZhbHByZSA9IHZhbHByZSArIDFcbn0pO1xudGltZXJkYWVtb24ucG9zdCgxMDAwLCBmdW5jdGlvbigpIHtcbiAgICB2YWxwb3N0ID0gdmFscG9zdCArIDFcbn0pO1xuXG5cbmRlc2NyaWJlKFwidGltZXJkYWVtb25cIiwgZnVuY3Rpb24oKSB7XG4gICAgdGhpcy50aW1lb3V0KDUwMDAwKTtcbiAgICBcbiAgICBkZXNjcmliZShcInByZVwiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgaXQoXCJhZnRlciA1IHNlY29uZHMgcHJlIGZ1bmN0aW9uIHdhcyBleGVjdXRlZCA2IHRpbWVzXCIsIGZ1bmN0aW9uKGRvbmUpIHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgZXhwZWN0KHZhbHByZSkudG8uYmUuZGVlcC5lcXVhbCg2KTtcbiAgICAgICAgICAgICAgICBkb25lKClcbiAgICAgICAgICAgIH0sIDUxMDApXG4gICAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgZGVzY3JpYmUoXCJwb3N0XCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICBpdChcImFmdGVyIDEwIHNlY29uZHMgcG9zdCBmdW5jdGlvbiB3YXMgZXhlY3V0ZWQgMTAgdGltZXNcIiwgZnVuY3Rpb24oZG9uZSkge1xuICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBleHBlY3QodmFscG9zdCkudG8uYmUuZGVlcC5lcXVhbCgxMCk7XG4gICAgICAgICAgICAgICAgZG9uZSgpXG4gICAgICAgICAgICB9LCA1MDAwKVxuICAgICAgICB9KTtcbiAgICB9KTtcblxufSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
